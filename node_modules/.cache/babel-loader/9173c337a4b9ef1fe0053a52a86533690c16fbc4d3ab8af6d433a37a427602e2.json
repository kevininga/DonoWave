{"ast":null,"code":"var _jsxFileName = \"/Users/Sissy/Documents/GA/sei/Unit-4/projects/Final-Project/Project-4-Fundraiser-Frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from 'react'\n// import { Link } from 'react-router-dom';\n// import { useCombobox } from 'downshift';\n// import SingleCampaign from '../components/SingleCampaign';\n// import { CampaignContext, CampaignContextProvider } from '../context/campaignContextComponent';\n// import categoryURLs from '../data/categoryURLs';\n\n// const Home = () => {\n//   const { campaigns, donations } = useContext(CampaignContext);\n//   const [category, setCategory] = useState('');\n\n//   const handleCategoryChange = (event) => {\n//     setCategory(event.target.value);\n//   };\n\n//   const items = campaigns.map(campaign => campaign.title);\n\n//   const [selectedItem, setSelectedItem] = useState(null);\n\n//   const {\n//     isOpen,\n//     getToggleButtonProps,\n//     getLabelProps,\n//     getMenuProps,\n//     getInputProps,\n//     highlightedIndex,\n//     getItemProps,\n//     inputValue\n//   } = useCombobox({\n//     items,\n//     selectedItem,\n//     onSelectedItemChange: ({ selectedItem }) => {\n//       const selectedCampaign = campaigns.find(campaign => campaign.title === selectedItem);\n//       setCategory(selectedCampaign?.category || '');\n//       setSelectedItem(selectedItem);\n//     },\n//     onInputValueChange: ({ inputValue }) => {\n//       if (inputValue === '') {\n//         setSelectedItem(null);\n//       }\n//     },\n//     itemToString: (item) => (item ? item : ''), // This function handles the string conversion of each item.\n//   });\n\n//   const filteredItems = items.filter(item =>\n//     item.toLowerCase().includes(inputValue.toLowerCase())\n//   );\n\n//   const filteredCampaigns = campaigns.filter(campaign =>\n//     campaign.title.includes(selectedItem || '') &&\n//     (category ? campaign.category === category : true)\n//   );\n\n//   return (\n//     <div>\n//       <label {...getLabelProps()}>Search campaigns</label>\n//       <div>\n//         <input {...getInputProps()} />\n//         <button {...getToggleButtonProps()} aria-label=\"toggle menu\" />\n//       </div>\n//       <ul {...getMenuProps()}>\n//         {isOpen && inputValue &&\n//           filteredItems.map((item, index) => {\n//             const itemIndex = items.indexOf(item); // get the original index of the item\n//             return (\n//               <li\n//                 {...getItemProps({ index: itemIndex, item })}\n//                 style={{\n//                   backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n//                   fontWeight: selectedItem === item ? 'bold' : 'normal',\n//                 }}\n//                 key={item}\n//               >\n//                 {item}\n//               </li>\n//             );\n//           })}\n//       </ul>\n\n//       <select value={category} onChange={handleCategoryChange}>\n//         <option value=\"\">All Categories</option>\n//         {categoryURLs.map((cat, index) => (\n//           <option key={index} value={cat.category}>\n//             {cat.full_name}\n//           </option>\n//         ))}\n//       </select>\n\n//       {filteredCampaigns.map((campaign) => (\n//         <SingleCampaign key={campaign.id} campaign={campaign} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCombobox } from 'downshift';\nimport SingleCampaign from '../components/SingleCampaign';\nimport { CampaignContext, CampaignContextProvider } from '../context/campaignContextComponent';\nimport categoryURLs from '../data/categoryURLs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    campaigns,\n    donations\n  } = useContext(CampaignContext);\n  const [category, setCategory] = useState('');\n\n  // Function to handle changing the campaign category\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n  };\n\n  // Map the campaigns to an array of titles\n  const items = campaigns.map(campaign => campaign.title);\n\n  // Use state to manage the selected item\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  // Using the Downshift hook 'useCombobox' to manage the combobox\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    highlightedIndex,\n    getItemProps,\n    inputValue\n  } = useCombobox({\n    items,\n    selectedItem,\n    onSelectedItemChange: _ref => {\n      let {\n        selectedItem\n      } = _ref;\n      const selectedCampaign = campaigns.find(campaign => campaign.title === selectedItem);\n      setCategory((selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.category) || ''); // Set the category of the selected campaign\n      setSelectedItem(selectedItem); // Set the selected item\n    },\n\n    onInputValueChange: _ref2 => {\n      let {\n        inputValue\n      } = _ref2;\n      if (inputValue === '') {\n        setSelectedItem(null); // Clear the selected item when the input is cleared\n      }\n    },\n\n    itemToString: item => item ? item : '' // This function handles the string conversion of each item.\n  });\n\n  // Filter items based on user input\n  const filteredItems = items.filter(item => item.toLowerCase().includes(inputValue.toLowerCase()));\n\n  // Filtering campaigns based on selected item and category\n  const filteredCampaigns = campaigns.filter(campaign => campaign.title.includes(selectedItem || '') && (category ? campaign.category === category : true));\n\n  // Downshift functionality ends here\n\n  // Below is the rendering part of this component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      ...getLabelProps(),\n      children: \"Search campaigns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ...getToggleButtonProps(),\n        \"aria-label\": \"toggle menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ...getMenuProps(),\n      children: [\"// Show dropdown menu only when it's open and user has typed something\", isOpen && inputValue && filteredItems.map((item, index) =>\n      /*#__PURE__*/\n      // Generate each dropdown item\n      _jsxDEV(\"li\", {\n        ...getItemProps({\n          index,\n          item\n        }),\n        style: {\n          backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n          fontWeight: selectedItem === item ? 'bold' : 'normal'\n        },\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: handleCategoryChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), categoryURLs.map((cat, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.category,\n        children: cat.full_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), filteredCampaigns.map(campaign => /*#__PURE__*/_jsxDEV(SingleCampaign, {\n      campaign: campaign\n    }, campaign.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"WAWpec9kzD7ITY/bHjZTzXJZm9w=\", false, function () {\n  return [useCombobox];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useCombobox","SingleCampaign","CampaignContext","CampaignContextProvider","categoryURLs","jsxDEV","_jsxDEV","Home","_s","campaigns","donations","category","setCategory","handleCategoryChange","event","target","value","items","map","campaign","title","selectedItem","setSelectedItem","isOpen","getToggleButtonProps","getLabelProps","getMenuProps","getInputProps","highlightedIndex","getItemProps","inputValue","onSelectedItemChange","_ref","selectedCampaign","find","onInputValueChange","_ref2","itemToString","item","filteredItems","filter","toLowerCase","includes","filteredCampaigns","children","fileName","_jsxFileName","lineNumber","columnNumber","index","style","backgroundColor","fontWeight","onChange","cat","full_name","id","_c","$RefreshReg$"],"sources":["/Users/Sissy/Documents/GA/sei/Unit-4/projects/Final-Project/Project-4-Fundraiser-Frontend/src/pages/Home.js"],"sourcesContent":["// import React, { useState, useEffect, useContext } from 'react'\n// import { Link } from 'react-router-dom';\n// import { useCombobox } from 'downshift';\n// import SingleCampaign from '../components/SingleCampaign';\n// import { CampaignContext, CampaignContextProvider } from '../context/campaignContextComponent';\n// import categoryURLs from '../data/categoryURLs';\n\n// const Home = () => {\n//   const { campaigns, donations } = useContext(CampaignContext);\n//   const [category, setCategory] = useState('');\n\n\n//   const handleCategoryChange = (event) => {\n//     setCategory(event.target.value);\n//   };\n\n//   const items = campaigns.map(campaign => campaign.title);\n\n//   const [selectedItem, setSelectedItem] = useState(null);\n\n//   const {\n//     isOpen,\n//     getToggleButtonProps,\n//     getLabelProps,\n//     getMenuProps,\n//     getInputProps,\n//     highlightedIndex,\n//     getItemProps,\n//     inputValue\n//   } = useCombobox({\n//     items,\n//     selectedItem,\n//     onSelectedItemChange: ({ selectedItem }) => {\n//       const selectedCampaign = campaigns.find(campaign => campaign.title === selectedItem);\n//       setCategory(selectedCampaign?.category || '');\n//       setSelectedItem(selectedItem);\n//     },\n//     onInputValueChange: ({ inputValue }) => {\n//       if (inputValue === '') {\n//         setSelectedItem(null);\n//       }\n//     },\n//     itemToString: (item) => (item ? item : ''), // This function handles the string conversion of each item.\n//   });\n\n//   const filteredItems = items.filter(item =>\n//     item.toLowerCase().includes(inputValue.toLowerCase())\n//   );\n\n//   const filteredCampaigns = campaigns.filter(campaign =>\n//     campaign.title.includes(selectedItem || '') &&\n//     (category ? campaign.category === category : true)\n//   );\n\n\n//   return (\n//     <div>\n//       <label {...getLabelProps()}>Search campaigns</label>\n//       <div>\n//         <input {...getInputProps()} />\n//         <button {...getToggleButtonProps()} aria-label=\"toggle menu\" />\n//       </div>\n//       <ul {...getMenuProps()}>\n//         {isOpen && inputValue &&\n//           filteredItems.map((item, index) => {\n//             const itemIndex = items.indexOf(item); // get the original index of the item\n//             return (\n//               <li\n//                 {...getItemProps({ index: itemIndex, item })}\n//                 style={{\n//                   backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n//                   fontWeight: selectedItem === item ? 'bold' : 'normal',\n//                 }}\n//                 key={item}\n//               >\n//                 {item}\n//               </li>\n//             );\n//           })}\n//       </ul>\n\n\n\n//       <select value={category} onChange={handleCategoryChange}>\n//         <option value=\"\">All Categories</option>\n//         {categoryURLs.map((cat, index) => (\n//           <option key={index} value={cat.category}>\n//             {cat.full_name}\n//           </option>\n//         ))}\n//       </select>\n\n//       {filteredCampaigns.map((campaign) => (\n//         <SingleCampaign key={campaign.id} campaign={campaign} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useCombobox } from 'downshift';\nimport SingleCampaign from '../components/SingleCampaign';\nimport { CampaignContext, CampaignContextProvider } from '../context/campaignContextComponent';\nimport categoryURLs from '../data/categoryURLs';\n\nconst Home = () => {\n  const { campaigns, donations } = useContext(CampaignContext);\n  const [category, setCategory] = useState('');\n\n  // Function to handle changing the campaign category\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value);\n  };\n\n  // Map the campaigns to an array of titles\n  const items = campaigns.map(campaign => campaign.title);\n\n  // Use state to manage the selected item\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  // Using the Downshift hook 'useCombobox' to manage the combobox\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    highlightedIndex,\n    getItemProps,\n    inputValue,\n  } = useCombobox({\n    items,\n    selectedItem,\n    onSelectedItemChange: ({ selectedItem }) => {\n      const selectedCampaign = campaigns.find(campaign => campaign.title === selectedItem);\n      setCategory(selectedCampaign?.category || ''); // Set the category of the selected campaign\n      setSelectedItem(selectedItem); // Set the selected item\n    },\n    onInputValueChange: ({ inputValue }) => {\n      if (inputValue === '') {\n        setSelectedItem(null); // Clear the selected item when the input is cleared\n      }\n    },\n    itemToString: (item) => (item ? item : ''), // This function handles the string conversion of each item.\n  });\n\n  // Filter items based on user input\n  const filteredItems = items.filter(item =>\n    item.toLowerCase().includes(inputValue.toLowerCase())\n  );\n\n  // Filtering campaigns based on selected item and category\n  const filteredCampaigns = campaigns.filter(campaign =>\n    campaign.title.includes(selectedItem || '') &&\n    (category ? campaign.category === category : true)\n  );\n\n  // Downshift functionality ends here\n\n  // Below is the rendering part of this component\n\n  return (\n    <div>\n      {/* // Here we provide a search input and a button to toggle the dropdown */}\n      <label {...getLabelProps()}>Search campaigns</label>\n      <div>\n        <input {...getInputProps()} />\n        <button {...getToggleButtonProps()} aria-label=\"toggle menu\" />\n      </div>\n\n      {/* // The dropdown menu */}\n      <ul {...getMenuProps()}>\n        // Show dropdown menu only when it's open and user has typed something\n        {isOpen && inputValue &&\n          filteredItems.map((item, index) => (\n            // Generate each dropdown item\n            <li\n              key={item}\n              {...getItemProps({ index, item })}\n              style={{\n                backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n                fontWeight: selectedItem === item ? 'bold' : 'normal',\n              }}\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n\n      {/* // The category filter dropdown */}\n      <select value={category} onChange={handleCategoryChange}>\n        <option value=\"\">All Categories</option>\n        {categoryURLs.map((cat, index) => (\n          <option key={index} value={cat.category}>\n            {cat.full_name}\n          </option>\n        ))}\n      </select>\n\n      {/* // Here we render the filtered campaigns */}\n      {filteredCampaigns.map((campaign) => (\n        <SingleCampaign key={campaign.id} campaign={campaign} />\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,eAAe,EAAEC,uBAAuB,QAAQ,qCAAqC;AAC9F,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGZ,UAAU,CAACI,eAAe,CAAC;EAC5D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMiB,oBAAoB,GAAIC,KAAK,IAAK;IACtCF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGR,SAAS,CAACS,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC;;EAEvD;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM;IACJ2B,MAAM;IACNC,oBAAoB;IACpBC,aAAa;IACbC,YAAY;IACZC,aAAa;IACbC,gBAAgB;IAChBC,YAAY;IACZC;EACF,CAAC,GAAG9B,WAAW,CAAC;IACdiB,KAAK;IACLI,YAAY;IACZU,oBAAoB,EAAEC,IAAA,IAAsB;MAAA,IAArB;QAAEX;MAAa,CAAC,GAAAW,IAAA;MACrC,MAAMC,gBAAgB,GAAGxB,SAAS,CAACyB,IAAI,CAACf,QAAQ,IAAIA,QAAQ,CAACC,KAAK,KAAKC,YAAY,CAAC;MACpFT,WAAW,CAAC,CAAAqB,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEtB,QAAQ,KAAI,EAAE,CAAC,CAAC,CAAC;MAC/CW,eAAe,CAACD,YAAY,CAAC,CAAC,CAAC;IACjC,CAAC;;IACDc,kBAAkB,EAAEC,KAAA,IAAoB;MAAA,IAAnB;QAAEN;MAAW,CAAC,GAAAM,KAAA;MACjC,IAAIN,UAAU,KAAK,EAAE,EAAE;QACrBR,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACzB;IACF,CAAC;;IACDe,YAAY,EAAGC,IAAI,IAAMA,IAAI,GAAGA,IAAI,GAAG,EAAG,CAAE;EAC9C,CAAC,CAAC;;EAEF;EACA,MAAMC,aAAa,GAAGtB,KAAK,CAACuB,MAAM,CAACF,IAAI,IACrCA,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,UAAU,CAACW,WAAW,CAAC,CAAC,CACtD,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAGlC,SAAS,CAAC+B,MAAM,CAACrB,QAAQ,IACjDA,QAAQ,CAACC,KAAK,CAACsB,QAAQ,CAACrB,YAAY,IAAI,EAAE,CAAC,KAC1CV,QAAQ,GAAGQ,QAAQ,CAACR,QAAQ,KAAKA,QAAQ,GAAG,IAAI,CACnD,CAAC;;EAED;;EAEA;;EAEA,oBACEL,OAAA;IAAAsC,QAAA,gBAEEtC,OAAA;MAAA,GAAWmB,aAAa,CAAC,CAAC;MAAAmB,QAAA,EAAE;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpD1C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAA,GAAWqB,aAAa,CAAC;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B1C,OAAA;QAAA,GAAYkB,oBAAoB,CAAC,CAAC;QAAE,cAAW;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eAGN1C,OAAA;MAAA,GAAQoB,YAAY,CAAC,CAAC;MAAAkB,QAAA,GAAE,wEAEtB,EAACrB,MAAM,IAAIO,UAAU,IACnBS,aAAa,CAACrB,GAAG,CAAC,CAACoB,IAAI,EAAEW,KAAK;MAAA;MAC5B;MACA3C,OAAA;QAAA,GAEMuB,YAAY,CAAC;UAAEoB,KAAK;UAAEX;QAAK,CAAC,CAAC;QACjCY,KAAK,EAAE;UACLC,eAAe,EAAEvB,gBAAgB,KAAKqB,KAAK,GAAG,WAAW,GAAG,OAAO;UACnEG,UAAU,EAAE/B,YAAY,KAAKiB,IAAI,GAAG,MAAM,GAAG;QAC/C,CAAE;QAAAM,QAAA,EAEDN;MAAI,GAPAA,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGL1C,OAAA;MAAQU,KAAK,EAAEL,QAAS;MAAC0C,QAAQ,EAAExC,oBAAqB;MAAA+B,QAAA,gBACtDtC,OAAA;QAAQU,KAAK,EAAC,EAAE;QAAA4B,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvC5C,YAAY,CAACc,GAAG,CAAC,CAACoC,GAAG,EAAEL,KAAK,kBAC3B3C,OAAA;QAAoBU,KAAK,EAAEsC,GAAG,CAAC3C,QAAS;QAAAiC,QAAA,EACrCU,GAAG,CAACC;MAAS,GADHN,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAGRL,iBAAiB,CAACzB,GAAG,CAAEC,QAAQ,iBAC9Bb,OAAA,CAACL,cAAc;MAAmBkB,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACqC,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxC,EAAA,CApGID,IAAI;EAAA,QAyBJP,WAAW;AAAA;AAAAyD,EAAA,GAzBXlD,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}