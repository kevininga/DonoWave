{"ast":null,"code":"import axios from 'axios';\n\n// export const LOCALSTORAGE_KEY = 'token'\n\n// Create a re-useable axios object, with our API as the baseURL\nconst api = axios.create({\n  baseURL: 'https://project4-fundraiser-52c48ba180da.herokuapp.com/'\n});\n\n// Interceptors are axios functionality, that allows you to intercept requests and responses\n// Here we're setting the token in localstorage to the Authorization header\n// api.interceptors.request.use(config => {\n//   const token = localStorage.getItem(LOCALSTORAGE_KEY)\n//   config.headers.Authorization = token\n//   return config\n// })\n\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL"],"sources":["/Users/Sissy/Documents/GA/sei/Unit-4/projects/Final-Project/Project-4-Fundraiser-Frontend/src/api/apiConfig.js"],"sourcesContent":["import axios from 'axios'\n\n// export const LOCALSTORAGE_KEY = 'token'\n\n// Create a re-useable axios object, with our API as the baseURL\nconst api = axios.create({\n  baseURL: 'https://project4-fundraiser-52c48ba180da.herokuapp.com/',\n})\n\n// Interceptors are axios functionality, that allows you to intercept requests and responses\n// Here we're setting the token in localstorage to the Authorization header\n// api.interceptors.request.use(config => {\n//   const token = localStorage.getItem(LOCALSTORAGE_KEY)\n//   config.headers.Authorization = token\n//   return config\n// })\n\nexport default api"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}